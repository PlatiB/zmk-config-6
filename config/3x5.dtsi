#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>


// Layer aliases left thums T0L, right thums T0R
#define DEF 0
#define T1R 1
#define T2R 2
#define T3R 3
#define T1L 4
#define T2L 5
#define MSE 6

// Key position groups and extra key bindings
#ifdef TOTEM38   /* dropped index and pinkies */
#    define KEYS_L 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 25
#    define KEYS_R 5 6 7 8 9 15 16 17 18 19 26 27 28 29 30 31
#    define P_L_DEF    &kp ESC     /* left pinky             */
#    define P_R_DEF    &kp RET     /* right pinky            */
#    define P_T_R_T3R  &none       /* top right pinky        */
#    define OI_M_R_T3R &none       /* middle right out index */
#    define I_M_R_T3R  &kp LSHIFT  /* middle right index     */
#    define M_M_R_T3R  &kp LCTRL   /* middle right middle    */
#    define R_M_R_T3R  &kp LALT    /* middle right ring      */
#    define P_M_R_T3R  &kp LGUI    /* middle right pinky     */
#    define ALP_XXX &none
#else
#    define KEYS_L 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24
#    define KEYS_R 5 6 7 8 9 15 16 17 18 19 25 26 27 28 39
#    define P_L_DEF
#    define P_R_DEF
#    define P_T_R_T3R  &bt BT_CLR_ALL
#    define OI_M_R_T3R &bt BT_SEL 0
#    define I_M_R_T3R  &bt BT_SEL 1
#    define M_M_R_T3R  &bt BT_SEL 2
#    define R_M_R_T3R  &bt BT_SEL 3
#    define P_M_R_T3R  &bt BT_CLR
#    define ALP_XXX
#endif

#ifdef THREE_THUMBS
#    ifdef TOTEM38
#        define THUMBS 30 31 32 33 34 35
#    else
#        define THUMBS 32 33 34 35 36 37
#    endif
#    define T3_L_DEF &lt MSE ESC
#    define T3_R_DEF &lt T3R DEL
#    define T3_L_T1R &kp DOT
#    define T3_R_T1R &lt T3R DEL
#    define T3_L_T2R &kp LPAR
#    define T3_R_T2R &lt T3R DEL
#    define T3_XXX   &none
#else
#    ifdef TOTEM38
#        define THUMBS 30 31 32 33
#    else
#        define THUMBS 32 33 34 35
#    endif
#    define T3_L_DEF
#    define T3_R_DEF
#    define T3_L_T1R
#    define T3_R_T1R
#    define T3_L_T2R
#    define T3_R_T2R
#    define T3_XXX
#endif

#include "combos.dtsi"

#ifdef MOUSE_KEYS
#    include "mouse.dtsi"
#    define MS_ACT(key) &lt MSE key
#else
#    define MS_ACT(key) &kp key
#endif

&mt {
    flavor = "hold-preferred";
    tapping-term-ms = <150>;
    quick-tap-ms = <125>;
};

&lt {
    flavor = "balanced";
    tapping-term-ms = <150>;
    quick-tap-ms = <125>;
};

&caps_word {
    continue-list = <UNDERSCORE MINUS BSPC DEL N1 N2 N3 N4 N5 N6 N7 N8 N9 N0>;
};

/ {
    behaviors {
        aml: alpha_mods_l {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <150>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
            require-prior-idle-ms = <100>;
        };
        asl: alpha_shift_l {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
        };
        amr: alpha_mods_r {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <150>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
            require-prior-idle-ms = <100>;
        };
        asr: alpha_shift_r {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
        };
    };

     macros {
        ZMK_MACRO(win_sleep,
            wait-ms = <10>;
            tap-ms = <10>;
            bindings
                = <&macro_tap &kp LG(X) &kp U &kp S>;
        )
        ZMK_MACRO(colmk,
            wait-ms = <10>;
            tap-ms = <10>;
            bindings
                = <&macro_tap &kp LG(SPACE) &to CMK>;
        )
        ZMK_MACRO(hangl,
            wait-ms = <10>;
            tap-ms = <10>;
            bindings
                = <&macro_tap &kp LG(SPACE) &to DEF>;
        )
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "DEF";
            bindings = <
//     ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
         &kp Q         &kp W         &kp E         &kp R         &kp T             &kp Y         &kp U         &kp I         &kp O         &kp P
//     ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
         &aml LGUI A  &aml LALT S   &aml LCTRL D   &asl LSHFT F  &kp G             &kp H         &asr LSHFT J  &amr LCTRL K   &amr LALT L   &amr LGUI SQT
//     ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
P_L_DEF  &kp Z         &kp X         &kp C         MS_ACT(V)     &kp B             &kp N         &kp M         &kp COMMA     &kp DOT       &kp SLASH    P_R_DEF
//     ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                     T3_L_DEF      &lt T1L SPACE &lt T2L TAB       &lt T2R RET   &lt T1R BSPC  T3_R_DEF
//                                               ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;
        };

       t1r_layer {
            display-name = "T1R";  // num; calc
            bindings = <
//     ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
         &kp LBKT      &kp N7        &kp N8        &kp N9        &kp RBKT          &kp C_AL_CALC &kp PLUS      &kp MINUS     &kp STAR      &kp SLASH
//     ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
         &kp SEMI      &kp N4        &kp N5        &kp N6        &kp EQUAL         &kp CAPS      &kp LSHIFT    &kp LCTRL     &kp LALT      &kp LGUI
//     ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
P_L_DEF  &kp GRAVE     &kp N1        &kp N2        &kp N3        &kp BSLH          &kp RET       &none         &kp COMMA     &kp DOT       &kp SLASH    P_R_DEF
//     ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                     T3_L_T1R      &kp N0        &kp MINUS         &lt T2R RET   &lt T1R BSPC  T3_R_T1R
//                                               ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;
        };

       t2r_layer {
            display-name = "T2R";  // sym; nav
            bindings = <
//     ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
         &kp LBRC      &kp AMPS      &kp STAR      &kp LPAR      &kp RBRC          &kp PG_UP     &kp HOME      &kp UP        &kp END        &kp INS
//     ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
         &kp COLON     &kp DLLR      &kp PRCNT     &kp CARET     &kp PLUS          &kp PG_DN     &kp LEFT      &kp DOWN      &kp RIGHT      &kp LSHIFT
//     ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
P_L_DEF  &kp TILDE     &kp EXCL      &kp AT        &kp HASH      &kp PIPE          &kp LC(Y)     &kp LC(V)     &kp LC(C)     &kp LC(X)     &kp LC(Z)    P_R_DEF
//     ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                     T3_L_T2R      &kp RPAR      &kp UNDER         &lt T2R RET   &lt T1R BSPC  T3_R_T2R
//                                               ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;
        };

        t3r_layer {
            display-name = "T3R";  // fun; sys
            bindings = <
//     ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
         &kp F12       &kp F7        &kp F8        &kp F9        &kp PSCRN         &out OUT_BLE  &out OUT_USB &ext_power EP_ON &ext_power EP_OFF P_T_R_T3R
//     ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
         &kp F11       &kp F4        &kp F5        &kp F6        &kp SLCK          OI_M_R_T3R    I_M_R_T3R     M_M_R_T3R     R_M_R_T3R     P_M_R_T3R 
//     ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
P_L_DEF  &kp F10       &kp F1        &kp F2        &kp F3        &kp PAUSE_BREAK   &kp LC(Y)     &lt T3R LC(V) &kp LC(C)     &kp LC(X)     &kp LC(Z)    P_R_DEF
//     ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                     T3_L_DEF      &lt T1L SPACE &lt T2L TAB       &lt T2R RET   &lt T1R BSPC T3_R_DEF
//                                               ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;
        };

        t1l_layer {
            display-name = "T1L";  // button
            bindings = <
//     ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
         &kp LC(Z)     &kp LC(X)     &kp LC(C)     &kp LC(V)     &kp LC(Y)         &kp LC(Y)     &kp LC(V)     &kp LC(C)     &kp LC(X)     &kp LC(Z)
//     ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
         &kp LGUI      &kp LALT      &kp LCTRL     &kp LSHIFT    &colmk            &hangl        &kp RSHIFT    &kp RCTRL     &kp RALT      &kp RGUI
//     ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
P_L_DEF  &kp LC(Z)     &kp LC(X)     &kp LC(C)     &kp LC(V)     &kp LC(Y)         &kp LC(Y)     &kp LC(V)     &kp LC(C)     &kp LC(X)     &kp LC(Z)    P_R_DEF
//     ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                     T3_L_DEF      &lt T1L SPACE &lt T2L TAB       &lt T2R RET   &lt T1R BSPC  T3_R_DEF
//                                               ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;
        };

        t2l_layer {
            display-name = "T2L";  // colemakdh
            bindings = <
//     ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
         &kp Q         &kp W         &kp F         &kp P         &kp B             &kp J         &kp L         &kp U         &kp Y         &kp SQT
//     ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
         &aml LGUI A   &aml LALT R   &aml LCTRL S  &asl LSHFT T  &kp G             &kp M         &asr LSHFT N  &amr LCTRL E  &amr LALT I   &amr LGUI O
//     ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
P_L_DEF  &kp Z         &kp X         &kp C         MS_ACT(D)     &kp V             &kp K         &kp H         &kp COMMA     &kp DOT       &kp SLASH    P_R_DEF
//     ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                     T3_L_DEF      &lt T1L SPACE &lt T2L TAB       &lt T2R RET   &lt T1R BSPC  T3_R_DEF
//                                               ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;
        };

#ifdef MOUSE_KEYS
        mouse_layer {
            display-name = "MSE";    // T3L
            bindings = <
//     ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
         &none         &none         &none         &none         &none             &none        &msc SCRL_LEFT &mmv MOVE_UP  &msc SCRL_RIGHT &msc SCRL_UP
//     ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
         &none         &none         &none         &none         &none             &none       &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT &msc SCRL_DOWN
//     ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
P_L_DEF  &none         &none         &none         &trans        &none             &none         &mkp MB4      &mkp MCLK     &mkp MB5      &none        P_R_DEF
//     ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                     T3_L_DEF      &lt T1L SPACE &lt T2L TAB       &mkp LCLK     &mkp RCLK     T3_R_DEF
//                                               ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;
        };
#endif

    };
};
